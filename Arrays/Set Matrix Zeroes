//Importance of conditions in conditional statemnts and order of traversal



SC -> O(M+N)
//We can solve the problem in O(m+n) space.
//We take 2 arrays of size m and n respectively. 
//For matrix[i][j]==0, we set row[i] and col[j] to 0.

#include <bits/stdc++.h> 
void setZeros(vector<vector<int>> &matrix)
{
	// Write your code here.
    int m=matrix.size();
    int n=matrix[0].size();
    vector<int> row(m, 0);
    vector<int> col(n, 0);

    for(int i=0; i<m; ++i){
        for(int j=0; j<n; ++j){
            if(!matrix[i][j]){
                row[i]=0;
                col[j]=0;
            }
        }
    }
    
    for(int i=0; i<m; ++i){
            for(int j=0; j<n; ++j){
                if(row[i]==0 || col[j]==0) matrix[i][j]=0;
            }
        }
    }
}



SC -> O(1)
//Here we solve the problem in constant space.
//If we find matrix[i][j]==0, we set the first cell in the respective column and row to 0. (Why? -> Since these cells already traversed)
//Edge case : matrix[0][0] can be set to 0 for both the first row as well as the first column. So we take flags for 0s in first row and first column,
//The we traverse in REVERSE order (to prevent any unwanted changes to our first row and column respectively)
//BE CAREFUL WITH TTHE CONDITION STATEMENTS

//Take flag only for either row or column (no need for both)<----------------------------Slight improvement----------------------------->Code not added

#include <bits/stdc++.h> 
void setZeros(vector<vector<int>> &matrix)
{
	// Write your code here.
    int m=matrix.size();
    int n=matrix[0].size();
    int fr=0, fc=0;

    for(int i=0; i<m; ++i){
        for(int j=0; j<n; ++j){
            if(matrix[i][j]==0){
                if(i==0){
                    fr=1;
                } 
                if(j==0){
                    fc=1;
                }
                matrix[i][0]=0;
                matrix[0][j]=0;
            }
        }
    }
    
    for(int i=m-1; i>=0; --i){
        for(int j=n-1; j>=0; --j){
            if(i==0){
                if(fr==1) matrix[i][j]=0;
            }
            else if(j==0){
                if(fc==1) matrix[i][j]=0;
            }
            else if(matrix[0][j]==0 || matrix[i][0]==0) matrix[i][j]=0;
        }
    }
}
