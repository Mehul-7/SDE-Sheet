Sort array of 0s, 1s and 2s.

<----------------------------------------Brute Force---------------------------------------->
TC -> O(N.LogN)
TC -> O(1)

What you do is basically sort the array.

<----------------------------------------Linear -> two pass---------------------------------------->
TC -> O(N)
SC -> O(1)

Alogrithm :
Count the no of 0s, 1s and 2s in the given array.
The in the second pass, set values accordingly.

void sort(vector<int> &nums, int n){
int a=0, b=0;
for(auto it : nums){
	if(it==0) ++a;
	if(it==1) ++b;
}
for(int i=0; i<n; ++i){
	if(a>0){
		nums[i]=0;
		--a;
	}
	else if(b>0){
		nums[i]=1;
		--b;
	}
	else nums[i]=2;
}
}

<----------------------------------------Linear -> One Pass---------------------------------------->

TC -> O(N)
SC -> O(1)

Dutch National Flag Algorithm :
Take 3 variables : low , mid, high;
low -> all nos. before nums[low] are 0
hight -> all nos. after nums[high] are 2
if(nums[mid]==0) swap with low, increase low(no need to re examine the value as it can't be 2)
else if(nums[mid]==2) swap with high, decrease high and decrease mid)


void sort(vector<int> &nums, int n){
	int low =0, high=n-1;
	for(int mid=0; mid<=high; ++mid){
		if(nums[mid]==0){
			swap(nums[low++], nums[mid]);
		else if(nums[mid]==2)
			swap(nums[high--], nums[mid--]);
	}
}















